<style>

.memoryindex{
  font-family: ヒラギノ丸ゴ Pro;
  margin-left: 30px;
  margin-top: 30px;
  max-height: 50.5em;
  overflow-y: auto;
  width: 1400px;
}
.pagination>li>a {
  border: none;     /*枠線をなくす*/
  color: #696969;   /*文字の色を変える*/
  margin-left: 827px;  /*ここでmargin: auto;を使っても適用されなかったのはなぜ？*/
}

/* 表示しているページ番号のデザイン */
.pagination>.active>a {
  background: #93c9ff;     /*背景の色を変える*/
  border-radius: 20px;     /*角を丸くする*/
}

/*ホバー時のデザイン*/
.pagination>li>a:hover {
  border-radius: 20px;    /*角を丸くする*/
}
.card{
  box-shadow: 0 0 3px 0 rgba(0,0,0,.12), 0 2px 3px 0 rgba(0,0,0,.22);
	transition: .3s;
}
.card:hover{
  box-shadow: 10px 10px 15px -10px;
	transform: translateY(-4px);
}
.card-body{
  min-height: 10em;
  max-height: 30em;
  overflow-y: auto;
}
.to_genre{
  font-size: 30px;
  text-decoration: none;
  font-family: ヒラギノ丸ゴ Pro;
  margin-top: -50px;
  margin-left: 1500px;
}
.page{
  position: fixed;
  top: 920px;
}
</style>



<div class="memoryindex">
  <div class="row row-cols-1 row-cols-md-2 g-4">
    <% @answers.each do |answer| %>
      <% if current_user.id == answer.question.user_id %>
        <div class="cards" id="card" data-name="card" data-url="/questions/<%= answer.question.id %>">
          <div class="card border-dark mb-3 h-100" style="height: 30rem, width: 48rem;">
            <div class="card-body">
              <h2 class="card-title"><%= (t '.q') %></h2>
              <p class="card-text"><%= answer.question.statement %></p>
            </div>
          </div>
        </div>
      <% end %>
    <% end %>
  </div>
</div>

<span><%=link_to 'テストを終了する', genres_path, { class: "to_genre" } %></span>


<script>
    const cards = document.getElementsByClassName('cards') /* クラス名が「cards」の要素をすべて取得し、定数cardsとして代入する
                                                           ただ、ここで取得できるのは「配列に似ているが、実際には配列ではなく、HTMLcollectionオブジェクトを返す」 */
    for (let card of cards) {                              //for (仮変数 of 配列){(処理)} この構文では配列の中の値を出力
      card.addEventListener('click', () => {
        console.log(card);                                  //ここで呼び出される値は各cardの情報データ?
        open (card.dataset.url);                           //各cardのdata属性のURLを取得し、openメソッドを適用
      })
    }
</script>
