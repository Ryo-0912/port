<style>
  .side {
    background-color: #8fbc8f;
    width:1000px; # 200から1000
    height:735px;
    text-align:center;
    position: relative;
  }

  .genreform {
    position: absolute;
    top: 30px;
    left: 200px;
  }
  
</style>

<div class="side">
<div class="accordion" id="accordionExample">
<div class="accordion-item">
  <h2 class="accordion-header" id="headingOne">
    <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
      Accordion Item #1
    </button>
  </h2>
  <div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#accordionExample">
    <div class="accordion-body">
      <strong>This is the first item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
    </div>
  </div>
</div>
<div class="accordion-item">
  <h2 class="accordion-header" id="headingTwo">
    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
      Accordion Item #2
    </button>
  </h2>
  <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#accordionExample">
    <div class="accordion-body">
      <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
    </div>
  </div>
</div>
<div class="accordion-item">
  <h2 class="accordion-header" id="headingThree">
    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
      Accordion Item #3
    </button>
  </h2>
  <div id="collapseThree" class="accordion-collapse collapse" aria-labelledby="headingThree" data-bs-parent="#accordionExample">
    <div class="accordion-body">
      <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
    </div>
  </div>
</div>
</div>

















  <svg style="display: none;">
    <symbol id="icon-add" viewBox="0 0 24 24">
      <path d="M18 13h-5v5c0 .55-.45 1-1 1s-1-.45-1-1v-5H6c-.55 0-1-.45-1-1s.45-1 1-1h5V6c0-.55.45-1 1-1s1 .45 1 1v5h5c.55 0 1 .45 1 1s-.45 1-1 1z"></path>
    </symbol>
  </svg>

  <span class="genre"><%= "ジャンル" %></span>

  <span>
    <button id="gbtn" class="knopf even pill shade inverse m-">
      <svg class="icon">
        <use xlink:href="#icon-add"></use>
      </svg>
    </button>
  </span>

  <div class="accordion"　id="accordionExample">
    <div class="accordion-item">
      <% genres = Genre.grouping_genres %>
        <% genres.each do |key, value| %>
          <h2 class="accordion-header" id="headingOne">
            <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
              <%= key %>
            </button>
          </h2>
          <div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#accordionExample">
            <div class="accordion-body">
            <% value.each do |v| %>
              <span class="gen"><%= v.name %></span>

              <span class="edit-btn">
                <%= link_to edit_genre_path(v.id), id: 'button-edit-#{v.id}' do %>
                  <i id="pen" class="fas fa-pen"></i>
                <% end %>
              </span>
              <span class="delete-btn">
                <%= link_to genre_path(v.id), id: 'button-delete-#{v.id}', method: :delete, data: { confirm: "ジャンル「#{v.name}」を削除しますが、よろしいですか？"} do %>
                  <i id="trash" class="fas fa-trash"></i>
                <% end %>
              </span></br>
            <% end %>
            </div>
          </div>
        <% end %>
    </div>
  </div>

　<span class="genreform" id="gform">
    <%= form_with model: genre, local: true do |form| %>
      <%= form.text_field :name %>
      <%= form.submit "登録" %>
    <% end %>
  </span>
</div>

<script>
const btn = document.getElementById('gbtn');
  const form = document.getElementById('gform');
  btn.addEventListener('click', () => {

    if (form.style.display === 'none'){
      form.style.display = 'block';
    } else {
      form.style.display = 'none';
    }

  })
</script>
